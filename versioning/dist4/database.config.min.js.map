{"version":3,"sources":["database.config.js"],"names":["require","Pool","config","connectionString","DATABASE_URL","pool","query","err","res","console","log","runQuery","values","_ref","rows","_args","arguments","regeneratorRuntime","async","_context","prev","next","length","undefined","awrap","sent","abrupt","stop","module","exports"],"mappings":"0BAAAA,QAAA,MAAAC,cAAAA,KACAC,OAAAF,QAAA,eAKMG,iBAAmBD,OAAOE,aAC1BC,KAAO,IAAIJ,KAAK,CAAEE,iBAAAA,mBAIpBE,KAAKC,MAAM,eAAgB,SAACC,EAAKC,GAL/BL,GAAAA,QAAmBD,IAAM,8BAAeK,GAOlCC,GAAKC,QAAQC,IAAI,sCAK7B,IAAMC,SAAW,SAAOL,GAAP,IAAAM,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAcT,EAAd,EAAAG,EAAAO,aAAAC,IAAAR,EAAA,GAAAA,EAAA,GAAuB,GAAvBI,EAAAE,KAAA,EAAAJ,mBAAAO,MARVnB,KAAAC,MAAAA,EAAAM,IAQU,KAAA,EAAA,OAAAC,EAAAM,EAAAM,KARhBX,EAQgBD,EARhBC,KAQgBK,EAAAO,OAAA,SAPRpB,GAOQ,KAAA,EAAA,IAAA,MAAA,OAAAa,EAAAQ,WAJZC,OAHDC,QAAA,CAAAlB,SAAAA","file":"database.config.min.js","sourcesContent":["//database connection occurs here\r\n// First import your dependencies\r\nconst { Pool } = require('pg');//use to create a connection pool to PSQL databases\r\nconst config = require('./env/index'); // importing a configuration file for PSQL database\r\n\r\n// Setting up the connection\r\nconst connectionString = config.DATABASE_URL; //fectching the database Url from the config(environment)\r\nconst pool = new Pool({ connectionString }); // creating a pool connection\r\n\r\n// Checking for successful connection\r\n(() => {\r\n    pool.query('SELECT NOW()', (err, res) => {\r\n        if (err) console.log('Database Connection Failed!', err); // database connection not successful should display this error message\r\n        if (res) console.log('Connected to PostgresQL Database'); // successful\r\n    });\r\n})();\r\n\r\n// Defining a Query Function\r\nconst runQuery = async (query, values = []) => {\r\n    const { rows } = await pool.query(query, values);// pool.query to execute the provided SQL\r\n    return rows; // contain the result of the query\r\n};\r\n\r\n// Exporting the runQuery Function\r\nmodule.exports = { runQuery };\r\n\r\n\r\n"]}